#
# Dockerfile for DarkNet (NN in C)
#
# - For CPU ONLY (without CUDA related stuffs)
# - Use the fork of AlexyAB for AVX acceleration
#

FROM ubuntu:16.04

# Install Python3

RUN apt-get update \
  && apt-get install -y python3-pip python3-dev \
  && cd /usr/local/bin \
  && ln -s /usr/bin/python3 python \
  && pip3 install --upgrade pip

# Build darknet

WORKDIR /root

RUN \
    apt-get update && apt-get install -y \
    autoconf automake libtool build-essential git \
    wget

RUN \
    #git clone https://github.com/pjreddie/darknet && \
    git clone https://github.com/AlexeyAB/darknet && \
    cd darknet && \
    # Build darknet library
    sed -i '0,/LIBSO=0/s//LIBSO=1/' Makefile && \
    # Enable AVX acceleration
    sed -i '0,/AVX=0/s//AVX=1/' Makefile && \
    # Enable multi-CPU acceleration
    # sed -i '0,/OPENMP=0/s//OPENMP=1/' Makefile \
    make -j 2

RUN \
    cp /root/darknet/libdarknet.so /usr/lib

WORKDIR /root/darknet

RUN \
    wget https://pjreddie.com/media/files/yolov2.weights

RUN \
    wget https://pjreddie.com/media/files/yolov2-tiny-voc.weights

# Build DPDK
# MARK: Use latest LTS version

ENV RTE_SDK=/root/dpdk
ENV RTE_TARGET=x86_64-native-linuxapp-gcc

RUN apt-get update && apt-get install -y net-tools \
    build-essential automake python-pip libcap-ng-dev gawk pciutils kmod \
    linux-headers-$(uname -a | awk '{print $3}') \
    git hugepages clang doxygen \
    libnuma-dev libpcap-dev

WORKDIR /root

RUN \
    git clone http://dpdk.org/git/dpdk "${RTE_SDK}" && \
    cd dpdk && \
    git checkout -b lts v18.11 && \
    make config T=${RTE_TARGET} && \
    make && \
    ln -sf "${RTE_SDK}/build" "${RTE_SDK}/${RTE_TARGET}"

# Install GDB and Valgrind for debugging and profilling
RUN \
    apt-get install -y valgrind gdb

CMD ["bash"]
